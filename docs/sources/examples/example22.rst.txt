:orphan:

.. _example22-label:


Efficient time evolution: expm_multiply_parallel
------------------------------------------------

In this example, we demonstrate the usage of the function `tools.evolution.expm_multiply_parallel()`, designed to compute
matrix exponentials for **static** Hamiltonians. One particular application of the matrix exponential is unitary dynamics generated by a static Hamiltonian (e.g., quantum quanches, etc.). In some cases, one can also use piecewise-constant functions to define a nontrivial dynamics: examples onclude periodically-driven systems, but also some Trotterization schemes. 

The function `tools.evolution.expm_multiply_parallel` is a modified, omp-parallelized implementation of `scipy.sparse.linalg.expm_multiply <https://docs.scipy.org/doc/scipy-0.16.1/reference/generated/scipy.sparse.linalg.expm_multiply.html>`_. See line 5 in the code snippet below to set the number of omp threads [omp version of QuSpin only]. 


To showcase the usage of `tools.evolution.expm_multiply_parallel()`, consider unitary time evolution generated by the :math:`T`-periodic spin-1 Heisenberg-like Hamiltonian

.. math::
	H(t) = \bigg\{ \!\begin{array}{c}\! &H_0,\qquad 0\leq t\leq T/2 \\ \!&H_1,\qquad T/2<t\leq T \end{array} 

.. math::
	H_0 = \sum_{j=0}^{L-1}  \frac{1}{2} J_{xy} S^+_{j+1}S^-_j + \mathrm{h.c.}, \qquad
	H_1 = \sum_{j=0}^{L-1} J_{zz} S^z_{j+1}S^z_j + h_z S^z_j

where :math:`\vec S_j` is a spin-1 operator of Pauli operators acting on lattice site :math:`j`. We use periodic bounary conditions and work in the zero magnetization sector. 


We choose as the initial state the ground state of the average Hamiltonian :math:`H_\mathrm{ave} = 1/2(H_0+H_1)`, and evolve it under :math:`H(t)`. Every evolution cycle, we measure the energy density and the entanglement entropy density of half the system: 

.. math::
	\mathcal{E}_\mathrm{ave}(\ell T) &= \frac{1}{L}\langle\psi(\ell T)| H_\mathrm{ave} |\psi(\ell T)\rangle, \quad |\psi(\ell T)\rangle = [\exp(-i H_1 T/2)\exp(-i H_0 T/2)]^\ell|\psi(0)\rangle,  \\
	s_\mathrm{ent}(\ell T) &= \frac{1}{L_A} \mathrm{tr}_A \left[ \rho_A(\ell T)\log \rho_A(\ell T)\right], \quad \rho_A(\ell T) = \mathrm{tr}_{L \backslash L_A} |\psi(\ell T)\rangle\langle\psi(\ell T)|.

We compare the entanglement entropy density value to the Page value [[D. N. Page, PRL *71*, 1291 (1993)]](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.71.1291), which takes into account finite-size corrections. As expected, the system heats up quickly to an infinite-temperature state.  

Script
------

:download:`download script <../../../examples/scripts/example22.py>`

.. literalinclude:: ../../../examples/scripts/example22.py
	:linenos:
	:language: python
	:lines: 1-